# -*- coding: utf-8 -*-
"""English summarization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hitQj24dpgfDs0s1Oo55k0BQ54i5GBoW
"""

import nltk
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize, sent_tokenize

text = """ In the vast expanse of the universe, swirling galaxies dance through the velvet darkness, each star a beacon of light amidst the cosmic symphony. On a small blue planet nestled in a corner of the Milky Way, life teems in every corner, from the depths of the oceans to the heights of the mountains. Here, amidst the bustle of humanity, stories unfold like petals unfurling in the gentle breeze of time. Each individual carries within them a universe of experiences, dreams, and desires, woven into the intricate tapestry of existence. From the laughter of children playing in sunlit meadows to the quiet contemplation of scholars poring over ancient texts, every moment is a brushstroke on the canvas of reality. Across continents and cultures, languages rise and fall like waves upon the shore, carrying with them the echoes of civilizations long past. In the heart of every person lies a yearning for connection, a desire to touch the infinite and to be touched in return. And so, we journey through life, navigating the labyrinth of existence with hope in our hearts and stars in our eyes, for within each of us lies the power to shape our own destiny and to leave a lasting imprint on the fabric of the cosmos."""

nltk.download('stopwords')
nltk.download('punkt')
stopWords = set(stopwords.words("english"))
words = word_tokenize(text)

freqTable = dict()
for word in words:
    word = word.lower()
    if word in stopWords:
        continue
    if word in freqTable:
        freqTable[word] += 1
    else:
        freqTable[word] = 1

sentences = sent_tokenize(text)
sentenceValue = dict()

for sentence in sentences:
    for word, freq in freqTable.items():
        if word in sentence.lower():
            if word in sentence.lower():
                if sentence in sentenceValue:
                    sentenceValue[sentence] += freq
                else:
                    sentenceValue[sentence] = freq

sumValues = 0
for sentence in sentenceValue:
    sumValues += sentenceValue[sentence]

average = int(sumValues / len(sentenceValue))

summary = ''

for sentence in sentences:
    if (sentence in sentenceValue) and (sentenceValue[sentence] > (1.2 * average)):
        summary += " " + sentence

print(summary)